// Code generated by github.com/go-enry/go-enry/v2/internal/code-generator DO NOT EDIT.
// Extracted from github/linguist commit: 7ca3799b8b5f1acde1dd7a8dfb7ae849d3dfb4cd

package data

// Type represent language's type. Either data, programming, markup, prose, or unknown.
type Type int

// Type's values.
const (
	TypeUnknown Type = iota
	TypeData
	TypeProgramming
	TypeMarkup
	TypeProse
)

func (t Type) String() string {
	switch t {
	case TypeData:
		return "data"
	case TypeProgramming:
		return "programming"
	case TypeMarkup:
		return "markup"
	case TypeProse:
		return "prose"
	default:
		return "unknown"
	}
}

func TypeForString(s string) Type {
	switch s {
	case "data":
		return TypeData
	case "programming":
		return TypeProgramming
	case "markup":
		return TypeMarkup
	case "prose":
		return TypeProse
	default:
		return TypeUnknown
	}
}

var LanguagesType = map[string]int{
	"Batchfile":    2,
	"C#":           2,
	"C++":          2,
	"CSS":          3,
	"Clojure":      2,
	"CoffeeScript": 2,
	"Dockerfile":   2,
	"F#":           2,
	"Go":           2,
	"HTML":         3,
	"Handlebars":   3,
	"INI":          1,
	"Java":         2,
	"JavaScript":   2,
	"Less":         3,
	"Lua":          2,
	"Markdown":     4,
	"Objective-C":  2,
	"PHP":          2,
	"Perl":         2,
	"PowerShell":   2,
	"Pug":          3,
	"Python":       2,
	"R":            2,
	"Ruby":         2,
	"Rust":         2,
	"SCSS":         3,
	"SQL":          1,
	"Scheme":       2,
	"Shell":        2,
	"Solidity":     2,
	"Swift":        2,
	"Text":         4,
	"TypeScript":   2,
	"XML":          1,
	"YAML":         1,
}
